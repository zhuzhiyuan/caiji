<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AgICAgICAgICAgICAgICAgICAgICAgICmJiYmAICAgICAgICAgICAgICAgICAgICj4ChlZiYmJgCAgIC
        AgICAgICAgICAgICj3GGrYGVoYCYmJiYAgICAgICAgICAgICj6xwioqenK+DfX19mJiYmAICAgICAgKP
        rZ1Xb21wbW1tbW1nmoKVgJgCAgICAgKPr5esYmNjY2NuY2OJY2N0fZgCAgICAgKPp5eMVGNjY2NjXm9g
        uGNthoCYAgICAgKPsq6pWFFRUVFRZ2ETRGNnVKGYAgICAgKPqrCtcVVTUlJRUCUwME1vd3WhmAICAgKP
        qqi3qXFYWVlqJTY+OzZhbFupmAICAgKPq4p0hq+FdamOEhM2Pz42wFupgJgCAgKPdm1tbWNnp79KjEgc
        PUVDO9ZxnZgCAgKPVWNiYl5m0wceCsOln46Ozb0BnaGYAgKPVlFSX2O/SR4uxsjOzAysjmC+hMyYAgKP
        WFFRXmANHjNA0cXRzjVFBkYQTAICAgKPjFdTUmHXKipL0c/L0DUT1kpMAgICAgICj4yNd6wMDSg4uwHP
        Si4bC0wCAgICAgICAo+Pj4+PCxUtCc3LEBVJEAICAgICAgICAgICAgICCdUiKxEXNQgQAgICAgICAgIC
        AgICAgICAgnNNDIsSRACAgICAgICAgICAgICAgICAgIJDS4NTAICAgICAgICAgICAgICAgICAgICCdUJ
        AgICAgICAgICAgICAgICAgICAgICAgkCAgICAgICAgICAv///4/D//9ewD//acAD/y7AAD98gAAfdYAA
        HwWAAA8CgAAPj4AAB1KAAAcJgAADT4AAA8iAAAHVgAABhIAABwKAAA+PwAAfUuAAPwf/AH8G/4D/x//B
        /wb/4/8K//f/AigAAAAgAAAAQAAAAAEACAAAAAAAgAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////AAAA
        AACtmq0AxrbGAP/7/wD38/cA7+vvAOfj5wC9ur0Ac3FzAN7b3gDW09YA3tPWAOfb3gC1rq0AnJaUAKV9
        awD/9+8A/8uUAP/PnADvw5QA98ucALWWcwD3z6UA/9etAP/btQDv07UA/+fOAP/DewD/x4QA/7JSANaa
        SgDeploA97prAP/TnAD/16UA99OlAP/jvQCEeWsA/6IYAP+mKQDvnikA3pYxAP+uOQC1hkIAzp5aAJR5
        UgD/26UA58+tAP+eCAD/ohAA56ZCAM6qcwD/360A/+O1AL2qhAClopwAxsO9AP/ntQD/670A//PWAP/r
        tQD/770Axr6lAOfj1gC9tpwA//fGANbTtQD//94A///3AMbXxgDv9+8A3t/eAM7PzgDGx8YApaalAMbj
        zgC1494AnKalAK3r5wCU//8AnP//AKX//wCt//8Atf//AL3//wDG//8Azv//ANb//wDe//8A5///AO//
        /wD3//8AlPv/AJz7/wCU09YArdveAJT3/wCM8/8AlOfvAKX3/wBz5/cAhO//AJzz/wCEvsYAvff/AGvb
        7wCt8/8AhOv/AIzr/wB75/8AhOf/AM7v9wDW9/8AGK7WAHvj/wB7z+cApev/ALXv/wAAlsYACJ7OAAiS
        vQAQptYAEI61ACGmzgApst4AKa7WACGGpQAxtt4AMa7WAEK63gBCrs4AUsvvAFrT9wAxcYQAa9v/AHPf
        /wB73/8AjNfvAJzb7wCl4/cArd/vAACazgAIntYACKLWAAiazgAYqt4AGKbWABiGrQAhptYAMbbnACl5
        lABKw+8ASr7nAFK63gBr1/8AY77eAHPb/wBzw94A7/v/ABiWxgAhqt4AKbLnAEK+7wBCst4AWr7nAGvP
        9wBz1/8Ac8fnAITb/wCc4/8Avef3AEq+7wBSw/cAWsf3AGPP/wBr0/8Ac9P/AHvX/wCc2/cAtdfnACl9
        pQBjy/8AlNv/AJTX9wCc3/8A5/f/AGvL/wDe8/8Ae5KlAK22vQDn6+8A5+//AMbT7wApXe8AtcPnAO/z
        /wBjhv8Ac5L/AISe/wDW3/8AUnX/AJSq/wBjbZQA1tvvAHuO5wDO1/8Arbr/AL3H/wDe4/8AnJ69APf3
        /wDn5+8A9/f3AO/v7wD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApiYmJgCAgICAgICAgICAgICAgICAgICAgICAgIC
        AgKPg3yAh5iYmJgCAgICAgICAgICAgICAgICAgICAgICAo+7nIakonmVmJiYmJgCAgICAgICAgICAgIC
        AgICAgICjwGznp6enrCZl3t8mJiYmJgCAgICAgICAgICAgICAo+ujmyKioqKioqKip6Gl6J8gJiYmAIC
        AgICAgICAgICj6qbcnR0dHR0dHR0dHR0dHSGmX55mAICAgICAgICAgKPs6IBbm1tbW1tbW1tbW1tbW1t
        bYh6mAICAgICAgICAo+zoqx3Z2dnZ2dnZ2dnZ2dwZ2dnnJeYAgICAgICAgICj7OkqVljY2NjY2NjY2Nj
        dLFtY2OcYpWYAgICAgICAgKPuK6BAWJiYmJiYmJiYm2LRKpjYqhVfpgCAgICAgICAo+qrpdxVVFRUVFR
        UVFjjBgjRHBenlZugJgCAgICAgICj7iwrqlaUlJSUlJSUW4YMDAUYWKeWFhzmAICAgICAgKPqrCwgwFY
        VVRUVFNoMTY2NjYjUJ5YWIuYmAICAgICAo+4nJyum469AVxbWEE2Njs7OzskuVpaWn2YAgICAgICj6uK
        ioqehpd+pqmLvRITFD8/PDdEW1tbqYeYAgICAgKPq3BwcHBwcHCeaUubcT02JENDQzsmXKBaoZgCAgIC
        Ao9oY2NjY2Nnb746BjGEi6zFBkZGRRw9XV2pmJgCAgICj2VeXl5eXmNpOgYjLszDw3yEdZt1jawFBaCh
        mAICAgKPVFJSUlJeYAnXHjRPysfEyMwmxdW1aYSEj5WYAgICAo9VUlJSUmAPBzYsLQbL1NbHzjg9BtfX
        CAoCAgICAgICj1tSUlJSTAcmKCgXwdDR0MfEERMSBtZKEAICAgICAgICj1hVUlIDCAs0KBfSzdLRy80R
        HRsGDA8QAgICAgICAgKPjKxxAVwDCEopLc3BAQXRPRcVCwgPEAICAgICAgICAgKPj4+Pj48DBzgqEMHB
        0ctPIUrVDxACAgICAgICAgICAgICAgICAgIDB0IqENPOvhc6Bg8QAgICAgICAgICAgICAgICAgICAgID
        CCEzKyspDwcPEAICAgICAgICAgICAgICAgICAgICAgIQSiAyKEIHDwMCAgICAgICAgICAgICAgICAgIC
        AgICAgMHDyo4SQ8DAgICAgICAgICAgICAgICAgICAgICAgICAhAGDwtKAwICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgMHCwMCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMDAgICAgICAgICAgICAv//
        ///4f///8Af///AAf//wAAf/4AAA/+AAAH/gAAA/4AAAP+AAAB/gAAAf4AAAD+AAAA/gAAAH4AAAB+AA
        AAPgAAAD4AAAAeAAAAHgAAAB4AAAD+AAAA/wAAAP8AAAH/gAAD//8AB///gA///8Af///AP///4H////
        D////5//KAAAADAAAABgAAAAAQAIAAAAAACACgAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///8AAAAAAK2a
        rQDGtsYA//v/APfz9wDv6+8A5+PnAL26vQBzcXMA3tveANbT1gDe09YA59veALWurQCclpQApX1rAP/3
        7wD/y5QA/8+cAO/DlAD3y5wAtZZzAPfPpQD/160A/9u1AO/TtQD/584A/8N7AP/HhAD/slIA1ppKAN6m
        WgD3umsA/9OcAP/XpQD306UA/+O9AIR5awD/ohgA/6YpAO+eKQDeljEA/645ALWGQgDOnloAlHlSAP/b
        pQDnz60A/54IAP+iEADnpkIAzqpzAP/frQD/47UAvaqEAKWinADGw70A/+e1AP/rvQD/89YA/+u1AP/v
        vQDGvqUA5+PWAL22nAD/98YA1tO1AP//3gD///cAxtfGAO/37wDe394Azs/OAMbHxgClpqUAxuPOALXj
        3gCcpqUArevnAJT//wCc//8Apf//AK3//wC1//8Avf//AMb//wDO//8A1v//AN7//wDn//8A7///APf/
        /wCU+/8AnPv/AJTT1gCt294AlPf/AIzz/wCU5+8Apff/AHPn9wCE7/8AnPP/AIS+xgC99/8Aa9vvAK3z
        /wCE6/8AjOv/AHvn/wCE5/8Azu/3ANb3/wAYrtYAe+P/AHvP5wCl6/8Ate//AACWxgAIns4ACJK9ABCm
        1gAQjrUAIabOACmy3gAprtYAIYalADG23gAxrtYAQrreAEKuzgBSy+8AWtP3ADFxhABr2/8Ac9//AHvf
        /wCM1+8AnNvvAKXj9wCt3+8AAJrOAAie1gAIotYACJrOABiq3gAYptYAGIatACGm1gAxtucAKXmUAErD
        7wBKvucAUrreAGvX/wBjvt4Ac9v/AHPD3gDv+/8AGJbGACGq3gApsucAQr7vAEKy3gBavucAa8/3AHPX
        /wBzx+cAhNv/AJzj/wC95/cASr7vAFLD9wBax/cAY8//AGvT/wBz0/8Ae9f/AJzb9wC11+cAKX2lAGPL
        /wCU2/8AlNf3AJzf/wDn9/8Aa8v/AN7z/wB7kqUArba9AOfr7wDn7/8AxtPvACld7wC1w+cA7/P/AGOG
        /wBzkv8AhJ7/ANbf/wBSdf8AlKr/AGNtlADW2+8Ae47nAM7X/wCtuv8Avcf/AN7j/wCcnr0A9/f/AOfn
        7wD39/cA7+/vAP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICmJiYmAICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICj5KVmJiYmJgCAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICj6WsmpCPlZiYmJiYAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICj48BdrGwmaN7j3yYmJiYmAICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICj5GOu5yc
        nJycnK+Xk3l6lZiYmJgCAgICAgICAgICAgICAgICAgICAgICAgICAgKPj5edAaqenp6enp6enp6GpKKR
        eJWYmJiYAgICAgICAgICAgICAgICAgICAgICAgKPj7x7AXeJiYmJiYmJiYmJiYmJnJmXe498mJiYmAIC
        AgICAgICAgICAgICAgICAgKPj7OirHKKioqKioqKioqKioqKioqKip6FpJOPepiYmAICAgICAgICAgIC
        AgICAgKPj6qjqQFwdHR0dHR0dHR0dHR0dHR0dHR0dHR0hpl+eZgCAgICAgICAgICAgICAgKPj6qklgFs
        cHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwnHiYAgICAgICAgICAgICAgKPj6qtkXFybW1tbW1tbW1tbW1t
        bW1tbW1tbW1tbW1tsIGYAgICAgICAgICAgICAgKPoritonUBZ2dnZ2dnZ2dnZ2dnZ2dnZ2dtbWdnZ2dn
        sGZ6mAICAgICAgICAgICAgKPorikl4IBbGNjY2NjY2NjY2NjY2NjY2OoqGNjY2NjsFRzmAICAgICAgIC
        AgICAgKPorqtrZG9WWNjY2NjY2NjY2NjY2NjY4qysopjY2NjsFRrfJgCAgICAgICAgICAgKPorqurqOL
        AWJiYmJiYmJiYmJiYmJidKhEMahnYmJisFVVe5gCAgICAgICAgICAgKPgbqurq2lAVReXl5eXl5eXl5e
        Xl5jiUcUFEeKYl5esFZWhZWYAgICAgICAgICAgKPprivr6+QoFlSUlJSUlJSUlJSUmN0RxQkJBRhcFFS
        sFZWVZCYAgICAgICAgICAgKPprq3t7ejjF1SUlJSUlJSUlJSXnBhFDAwMCQYZGNSsFdXV5qAmAICAgIC
        AgICAgKPprqwsLCumwFXU1NTU1NTU1NSZ04UNjY2NjYwJW5fsFhYWHd4mAICAgICAgICAgKPpnaxsbGx
        kXEBXFlXVlRUVFRjUBQ2Nzc3Nzc3JERjsFlZWVmDfIcCAgICAgICAgKPdauoqKiomXuprKABAQFdXFhq
        Gjc7Njc7Ozs7OyRNsFpaWlqNepgCAgICAgICAgKPuauJiYmJiZykfpORpXWMcQEBAT02FCQ8PDw8PD4j
        YFpaWlpaf3yYAgICAgICAgKPuXZ0dHR0dHR0dHR0iIWXlqGCcQEmFBQ2Pz8/Pz8+GEhbW1tbi3yYAgIC
        AgICAgKPtHZwcHBwcHBwcHBwb6invgRJpXEBJhQUPkNDQ0NDOxlcXFxcXJSVmAICAgICAgKPjXZnZ2dn
        Z2dnZ2dndJ6+BA4BRH1xAQESEkVFPUNDQzYaXV1dXXV8mAICAgICAgKPcmhjY2NjY2NjY2NtdL4JDgEj
        Ijh6pZt1jKygAQEBRkYcEgEBAaCRlZgCAgICAgKPcmVeXl5eXl5eXmNtvg8OBSMfLszDw8PDtoCEkaWd
        dY5xAQEBAQGpfJgCAgICAgKPvVRSUlJSUlJSXmNpDw0FJh8gzMPDw8rKwwoWBcC1dZ+CfZalj4+Pj5UC
        AgICAgKPu1RSUlJSUlJSXmA5DdY3LCwnQcfHzUVFxMMRGgHX19fXCEu+CgICAgICAgICAgKPoFZSUlJS
        UlJSYBAM1j0pLCA5RtHPAUbVysYKHhwF19fX1whLCgICAgICAgICAgKPuaBSUlJSUlJkT0oGPSkpKS06
        1MvLxcHIxsdCNR49BdfXBgEJCgICAgICAgICAgIClLtXUlJSUlJgD9ZJIjMoKS0LydDQ0dDIx8hCFx4T
        EtYGAQwJEAICAgICAgICAgIClHVcUlJSUlJSYAzWSjQzKC1Lz8/P0s/LyMJAFx0eGwcBDAkQAgICAgIC
        AgICAgICApGgAQFbW1hXVb8H1zopMytMydLUAQHRy0VCNR0VSgUMCRACAgICAgICAgICAgICAo+Pj491
        i6xxAQVPBQhAMzMKz8EBAQHJz0UKIh06BggJEAICAgICAgICAgICAgICAgICAgKPj4+Pj4+PAwEMNTIt
        08EBxcnQyL8RIgnXBwkQAgICAgICAgICAgICAgICAgICAgICAgICAgICAhABSyEyL9PR0dDLzicfQAgF
        CRACAgICAgICAgICAgICAgICAgICAgICAgICAgICAhAFBQk0Mi0Kvr7MLx9CCwUJEAICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgIQBdcPKjIzKysqLDhKAQkQAgICAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICEAVJODMyMygpNToBCRACAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAhAF
        SjUyMjMhCQUMEAICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIQAQkuMjRMBUkQAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIQDAUPIDnXBxACAgICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICEEnXOQgGEAICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgICAhAHBQUQAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
        AgIQBRACAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICEAICAgICAgIC
        AgICAgICAgICAgICAgL///////8AAPD//////wAA8A//////AADwAP////8AAPAAD////wAA8AAA////
        AADgAAAP//8AAOAAAAD//wAA4AAAAB//AADgAAAAD/8AAOAAAAAH/wAA4AAAAAf/AADgAAAAA/8AAOAA
        AAAD/wAA4AAAAAH/AADgAAAAAf8AAOAAAAAA/wAA4AAAAAD/AADgAAAAAH8AAOAAAAAAfwAA4AAAAAA/
        AADgAAAAAD8AAOAAAAAAHwAA4AAAAAAfAADgAAAAAA8AAOAAAAAADwAA4AAAAAAHAADgAAAAAAcAAOAA
        AAAABwAA4AAAAAB/AADgAAAAAH8AAOAAAAAAfwAA8AAAAAB/AADwAAAAAP8AAPgAAAAB/wAA+AAAAAP/
        AAD/gAAAB/8AAP//gAAP/wAA//+AAB//AAD//8AAP/8AAP//4AB//wAA///wAP//AAD///gB//8AAP//
        +AP//wAA///8B///AAD///4P//8AAP///x///wAA////v///AAA=
</value>
  </data>
</root>